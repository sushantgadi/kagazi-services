#spring profile
spring.profiles.active=prod

#spring configuration#
server.error.whitelabel.enabled=false
management.security.enabled=false
security.basic.enabled=false


#database properties#
#spring.datasource.url=jdbc:postgresql://ec2-107-20-214-99.compute-1.amazonaws.com:5432/d7q79qdlsj3fjh?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
#spring.datasource.username=jbwxzgajczogob
#spring.datasource.password=882394c468f2dde0afd5b24ff8959aa04c7034203325c1a7dbd9193e56e8ef11  

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=admin

#spring.datasource.url=jdbc:postgresql://ec2-107-20-214-99.compute-1.amazonaws.com:5432/d7q79qdlsj3fjh?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
#spring.datasource.username=jbwxzgajczogob
#spring.datasource.password=882394c468f2dde0afd5b24ff8959aa04c7034203325c1a7dbd9193e56e8ef11 
 
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.default_schema=kagazi

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
#spring.jpa.show-sql = false 
spring.jpa.show-sql = true

# logging
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
#logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql=trace
#logging.level.=error

